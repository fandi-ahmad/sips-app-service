<aside class="aside is-placed-left is-expanded">
  <div class="aside-tools">
    <div>
      Admin <b class="font-black">One</b>
    </div>
  </div>
  <div class="menu is-menu-main flex justify-between" style="flex-direction: column; height: 90vh;">
    <div style="align-items: flex-start;">
      <p class="menu-label">General</p>
      <ul class="menu-list">
        <li class="" id="dashboard">
          <a href="/">
            <span class="icon"><i class="mdi mdi-desktop-mac"></i></span>
            <span class="menu-item-label">Dashboard</span>
          </a>
        </li>
        <li class="" id="pegawai">
          <a href="/pegawai">
            <span class="icon"><i class="mdi mdi-desktop-mac"></i></span>
            <span class="menu-item-label">Pegawai</span>
          </a>
        </li>
        <li class="" id="surat">
          <a href="/surat">
            <span class="icon"><i class="mdi mdi-desktop-mac"></i></span>
            <span class="menu-item-label">Surat</span>
          </a>
        </li>
      </ul>
    </div>

    <div class="flex justify-center mt-10" style="align-items: flex-end;">
      <button onclick="logoutUser()" class="button bg-gray-600 hover:bg-gray-700 text-white border-0" data-target="create-modal" type="button">
        <span class="icon"><i class="mdi mdi-logout"></i></span>
        <span>Logout</span>
      </button>
    </div>
  </div>
</aside>

<script>
const pathname = window.location.pathname

const getId = (id) => {
  return document.getElementById(id)
}

const checkActivePage = () => {
  if (pathname == '/') {
    getId('dashboard').classList.add('active')
  } else if (pathname == '/pegawai') {
    getId('pegawai').classList.add('active')
  } else if (pathname == '/surat') {
    getId('surat').classList.add('active')
  }
}

const logoutUser = () => {
  localStorage.removeItem('accessToken')
  window.location.href = '/login'
}

const checkToken = async () => {
  try {
    const response = await fetch(`http://localhost:8000/api/v1/pegawai`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`
      }
    });
    const data = await response.json();
  } catch (error) {
    window.location.href = '/login'
  }
};


const mounted = () => {
  checkActivePage()
  checkToken()
}
mounted()

</script>